rm -rf target
mkdir target
mkdir target/classpath
mkdir target/obj

# compile avian
cd avian
echo "compiling avian"
make platform=darwin arch=i386 ios=true bootimage=true
cd ..

# compile java classes and add them to 
# target/classpath.jar, then extract classpath.jar
#mv ../../gdx/src/com/badlogic/gdx/utils/GdxBuild.java ../../gdx/src/com/badlogic/gdx/utils/GdxBuild.java.tmp
#find ../../gdx/src -name *.java | xargs javac
#mv ../../gdx/src/com/badlogic/gdx/utils/GdxBuild.java.tmp ../../gdx/src/com/badlogic/gdx/utils/GdxBuild.java
#cd ../../gdx/src
#jar cf gdx.jar *
#mv gdx.jar ../../backends/gdx-backend-ios/target/classpath
#cd ../../backends/gdx-backend-ios/target/classpath
#unzip gdx.jar
#rm gdx.jar
#cd ../../

cp gdx.jar target/classpath
cd target/classpath
unzip gdx.jar
cd ../../

rm target/classpath/com/badlogic/gdx/assets/AssetManager*
rm target/classpath/com/badlogic/gdx/scenes/scene2d/ui/utils/DesktopClipboard*
find target/classpath/ -name .svn | xargs rm -r
find target/classpath/ -name *.java | xargs rm
find ../../gdx/src -name *.class | xargs rm

find ./src -name *.java | xargs javac -classpath target/classpath
rsync -av -f"- .svn" -f"+ */" -f"+ *.class" -f"- *" src/ target/classpath
find src -name *.class | xargs rm
cp -r avian/build/darwin-i386-bootimage/classpath target

# invoke bootimage generator on target/classpath directory
avian/build/darwin-i386-bootimage/bootimage-generator target/classpath target/bootimage.bin target/codeimage.bin
avian/build/darwin-i386-bootimage/binaryToObject target/bootimage.bin target/obj/bootimage-bin.o \
     _binary_bootimage_bin_start _binary_bootimage_bin_end darwin i386 8 writable
avian/build/darwin-i386-bootimage/binaryToObject target/codeimage.bin target/obj/codeimage-bin.o \
     _binary_codeimage_bin_start _binary_codeimage_bin_end darwin i386 8 executable

# copy libavian.a to target/obj and extract it so we can link to it.
cp avian/build/darwin-i386-bootimage/libavian.a target/obj
cd target/obj
ar x libavian.a
rm libavian.a
cd ..


