<project name="bullet-natives" basedir="." default="link">
	<!-- include the environment -->
	<property environment="env"/>	
	<property name="prefix" value="x86_64-w64-mingw32-"/>	

	<!-- need to path a few files, should do this with a diff really :p, see README in patched/ -->
	<target name="patch">
		<copy todir="src" verbose="true" overwrite="true">
			<fileset dir="../patched"/>
		</copy>
	</target>

	<!-- output directory for generated files -->
	<property name="jni-target" value="../../target/native/windows64" />
	<!-- output directory for distribution -->
	<property name="jni-dist" value="../libs/windows64" />
	<property name="libname" value="bullet-64.dll"/>
	<property name="jni-platform" value="win32"/>
	
	<!-- define g++ compiler, options and files to compile -->
	<property name="g++" value="${prefix}g++"/>
	<property name="g++-opts" value="-c -Wall -O2 -mfpmath=sse -msse2 -DFIXED_POINT -fmessage-length=0 -m64 -Isrc"/>
	<fileset id="g++-files" dir="./">
		<include name="**/*.cpp"/>
		<exclude name="src/BulletMultiThreaded/GpuSoftBodySolvers/**"/>
	</fileset>
	
	<!-- define gcc compiler, options and files to compile -->
	<property name="gcc" value="${prefix}gcc"/>	
	<property name="gcc-opts" value="${g++-opts}"/>
	<fileset id="gcc-files" dir="./">		
		<include name="**/*.c"/>				
	</fileset>

	<!-- define linker and options -->
	<property name="linker" value="${prefix}g++"/>
	<property name="linker-opts" value="-Wl,--kill-at -shared -static-libgcc -static-libstdc++"/>
	
	<!-- cleans the build directory, removes all object files and shared libs -->
	<target name="clean">
		<delete includeemptydirs="true" quiet="true">
			<fileset dir="${jni-target}"/>
			<fileset dir="${jni-dist}" includes="**/*" excludes="**/.svn"/>
		</delete>
	</target>

	<!-- compiles all C and C++ files to object files in the build directory -->
	<target name="compile" depends="patch">
		<mkdir dir="${jni-target}"/>
		<apply failonerror="true" executable="${g++}" dest="${jni-target}" verbose="true">
			<arg line="${g++-opts}"/>
			<arg value="-Ijni-headers"/>
			<arg value="-Ijni-headers/${jni-platform}"/>
			<arg value="-I."/>
			<srcfile/>
			<arg value="-o"/>
			<targetfile/>
			<fileset refid="g++-files"/>
			<chainedmapper>
				<flattenmapper/>
				<mapper type="glob" from="*.cpp" to="*.o"/>
			</chainedmapper>
		</apply>
		<apply failonerror="true" executable="${gcc}" dest="${jni-target}" verbose="true">
			<arg line="${gcc-opts}"/>
			<arg value="-Ijni-headers"/>
			<arg value="-Ijni-headers/${jni-platform}"/>
			<arg value="-I."/>
			<srcfile/>
			<arg value="-o"/>
			<targetfile/>
			<fileset refid="gcc-files"/>
			<chainedmapper>
				<flattenmapper/>
				<mapper type="glob" from="*.c" to="*.o"/>
			</chainedmapper>
		</apply>
	</target>	

	<!-- revert the nasty "patch" -->
	<target name="revert" depends="compile">
		<exec executable="svn" dir=".">
			<arg line="revert -R src"/>
		</exec>
	</target>

	<!-- links the shared library based on the previously compiled object files -->	
	<target name="link" depends="revert">
		<mkdir dir="${jni-dist}"/>
		<apply failonerror="true" executable="${linker}" parallel="true" dir="${jni-target}">
			<arg line="${linker-opts}"/>
			<arg value="-o"/>
			<arg path="${jni-dist}/${libname}"/>		
			<fileset dir="${jni-target}">
				<patternset>
					<include name="**/*.o"/>
				</patternset>
			</fileset>
		</apply>
	</target>	
</project>
