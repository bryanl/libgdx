/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.5
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.badlogic.gdx.physics.bullet;

import com.badlogic.gdx.utils.SharedLibraryLoader;
import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.math.Quaternion;
import com.badlogic.gdx.math.Matrix3;

public class CProfileManager {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected CProfileManager(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(CProfileManager obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        gdxBulletJNI.delete_CProfileManager(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  static {
    new SharedLibraryLoader().load("gdx-bullet");
  }

  public static void Start_Profile(String name) {
    gdxBulletJNI.CProfileManager_Start_Profile(name);
  }

  public static void Stop_Profile() {
    gdxBulletJNI.CProfileManager_Stop_Profile();
  }

  public static void CleanupMemory() {
    gdxBulletJNI.CProfileManager_CleanupMemory();
  }

  public static void Reset() {
    gdxBulletJNI.CProfileManager_Reset();
  }

  public static void Increment_Frame_Counter() {
    gdxBulletJNI.CProfileManager_Increment_Frame_Counter();
  }

  public static int Get_Frame_Count_Since_Reset() {
    return gdxBulletJNI.CProfileManager_Get_Frame_Count_Since_Reset();
  }

  public static float Get_Time_Since_Reset() {
    return gdxBulletJNI.CProfileManager_Get_Time_Since_Reset();
  }

  public static CProfileIterator Get_Iterator() {
    long cPtr = gdxBulletJNI.CProfileManager_Get_Iterator();
    return (cPtr == 0) ? null : new CProfileIterator(cPtr, false);
  }

  public static void Release_Iterator(CProfileIterator iterator) {
    gdxBulletJNI.CProfileManager_Release_Iterator(CProfileIterator.getCPtr(iterator), iterator);
  }

  public static void dumpRecursive(CProfileIterator profileIterator, int spacing) {
    gdxBulletJNI.CProfileManager_dumpRecursive(CProfileIterator.getCPtr(profileIterator), profileIterator, spacing);
  }

  public static void dumpAll() {
    gdxBulletJNI.CProfileManager_dumpAll();
  }

  public CProfileManager() {
    this(gdxBulletJNI.new_CProfileManager(), true);
  }

}
