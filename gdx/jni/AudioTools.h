/**
* Copyright 2010 Mario Zechner (contact@badlogicgames.com)
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*   http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_badlogic_gdx_audio_analysis_AudioTools */

#ifndef _Included_com_badlogic_gdx_audio_analysis_AudioTools
#define _Included_com_badlogic_gdx_audio_analysis_AudioTools
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_badlogic_gdx_audio_analysis_AudioTools
 * Method:    convertToFloat
 * Signature: (Ljava/nio/ShortBuffer;Ljava/nio/FloatBuffer;I)V
 */
JNIEXPORT void JNICALL Java_com_badlogic_gdx_audio_analysis_AudioTools_convertToFloat
  (JNIEnv *, jclass, jobject, jobject, jint);

/*
 * Class:     com_badlogic_gdx_audio_analysis_AudioTools
 * Method:    convertToShort
 * Signature: (Ljava/nio/FloatBuffer;Ljava/nio/FloatBuffer;I)V
 */
JNIEXPORT void JNICALL Java_com_badlogic_gdx_audio_analysis_AudioTools_convertToShort
  (JNIEnv *, jclass, jobject, jobject, jint);

/*
 * Class:     com_badlogic_gdx_audio_analysis_AudioTools
 * Method:    convertToMono
 * Signature: (Ljava/nio/ShortBuffer;Ljava/nio/ShortBuffer;I)V
 */
JNIEXPORT void JNICALL Java_com_badlogic_gdx_audio_analysis_AudioTools_convertToMono__Ljava_nio_ShortBuffer_2Ljava_nio_ShortBuffer_2I
  (JNIEnv *, jclass, jobject, jobject, jint);

/*
 * Class:     com_badlogic_gdx_audio_analysis_AudioTools
 * Method:    convertToMono
 * Signature: (Ljava/nio/FloatBuffer;Ljava/nio/FloatBuffer;I)V
 */
JNIEXPORT void JNICALL Java_com_badlogic_gdx_audio_analysis_AudioTools_convertToMono__Ljava_nio_FloatBuffer_2Ljava_nio_FloatBuffer_2I
  (JNIEnv *, jclass, jobject, jobject, jint);

/*
 * Class:     com_badlogic_gdx_audio_analysis_AudioTools
 * Method:    spectralFlux
 * Signature: (Ljava/nio/FloatBuffer;Ljava/nio/FloatBuffer;I)F
 */
JNIEXPORT jfloat JNICALL Java_com_badlogic_gdx_audio_analysis_AudioTools_spectralFlux
  (JNIEnv *, jclass, jobject, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
